/**:
  ros__parameters:
    min_ttc: 1.0  # [s] minimum time without collision when doing projection at each trajectory point
    distance_buffer: 0.0  # [m] extra distance to add to a projection (in addition to the vehicle overhang)
    min_adjusted_velocity: 2.5  # [m/s] minimum velocity that the module can set
    max_deceleration: 2.0  # [m/sÂ²] maximum deceleration caused by the adjusted velocity

    trajectory_preprocessing:
      start_distance: 0.0  # [m] distance ahead of ego from which to start modifying the trajectory
      max_length: 100.0 # [m] maximum distance (from the start point) where the velocity is adjusted
      max_duration: 10.0 # [s] maximum duration (from the start point) where the velocity is adjusted
      downsample_factor: 10  # factor by which to downsample the input trajectory for calculation
      calculate_steering_angles: false # if true, the steering angle at each trajectory point is calculated from the change in heading

    simulation:
      model: particle # model to use for forward projection at each trajectory point. Either "particle" or "bicycle"
      distance_method: exact  # distance calculation method. Either "exact" or "approximation".
      # parameters used only with the bicycle model
      steering_offset: 0.01 # [rad] steering angle offset used to model uncertainty in the forward projection
      nb_points: 5  # number of points representing the curved projections

    obstacles:
      dynamic_source: static_only # source of dynamic obstacles. Must be 'pointcloud', 'occupancy_grid', or 'static_only'.
      ignore_obstacles_on_path: false # if true, obstacles on the ego paths are ignored
      ignore_extra_distance: 1.0 # [m] extra lateral distance where obstacles along the path are ignored
      occupancy_grid_threshold: 60 # occupancy grid values higher than this are considered to be obstacles
      dynamic_obstacles_buffer: 1.5 # [m] extra distance around dynamic obstacles used to mask the occupancy grid and avoid false obstacle detection
      dynamic_obstacles_min_vel: 0.5 # [m/s] velocity above which a dynamic obstacle is ignored by the module
      static_map_tags: # linestring tags in the lanelet maps that will be used as static obstacles
        - guard_rail
      filter_envelope : false # whether to calculate the apparent safety envelope and use it to filter obstacles
      rtree_min_points: 500 # from this number of obstacle points, a rtree is used for collision detection
      rtree_min_segments: 1600 # from this number of obstacle segments, a rtree is used for collision detection
