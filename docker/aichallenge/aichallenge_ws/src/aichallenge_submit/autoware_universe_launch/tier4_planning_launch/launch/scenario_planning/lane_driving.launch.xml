<launch>
  <!-- lane_driving scenario -->
  <group>
    <push-ros-namespace namespace="lane_driving"/>
    <!-- behavior planning module -->
    <group>
      <push-ros-namespace namespace="behavior_planning"/>
      <group>
        <include file="$(find-pkg-share tier4_planning_launch)/launch/scenario_planning/lane_driving/behavior_planning/behavior_planning.launch.py">
          <arg name="vehicle_param_file" value="$(var vehicle_param_file)"/>
          <arg name="use_multithread" value="true"/>
          <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
          <arg name="container_name" value="$(var pointcloud_container_name)"/>
          <arg name="use_experimental_lane_change_function" value="$(var use_experimental_lane_change_function)"/>
        </include>
      </group>
      <group>
        <include file="$(find-pkg-share rtc_auto_mode_manager)/launch/rtc_auto_mode_manager.launch.xml">
          <arg name="param_path" value="$(var rtc_auto_mode_manager_param_path)"/>
        </include>
      </group>
    </group>

    <!-- motion planning module -->
    <group>
      <push-ros-namespace namespace="motion_planning"/>
      <include file="$(find-pkg-share tier4_planning_launch)/launch/scenario_planning/lane_driving/motion_planning/motion_planning.launch.py">
        <arg name="vehicle_param_file" value="$(var vehicle_param_file)"/>
        <arg name="use_multithread" value="true"/>
        <arg name="use_surround_obstacle_check" value="$(var use_surround_obstacle_check)"/>
        <arg name="cruise_planner_type" value="$(var cruise_planner_type)"/>
      </include>
    </group>
  </group>
</launch>
